/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/lib/BTree.ts":
/*!**************************!*\
  !*** ./src/lib/BTree.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __values = (this && this.__values) || function(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BTree = exports.SearchBTreeTraverse = exports.BTreeNode = void 0;\r\nvar Tree_1 = __webpack_require__(/*! ./Tree */ \"./src/lib/Tree.ts\");\r\nvar Stack_1 = __importDefault(__webpack_require__(/*! ./Stack */ \"./src/lib/Stack.ts\"));\r\nvar BTreeNode = /** @class */ (function (_super) {\r\n    __extends(BTreeNode, _super);\r\n    function BTreeNode(value, left, right) {\r\n        var _this = _super.call(this, value) || this;\r\n        _this.left = left;\r\n        _this.right = right;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BTreeNode.prototype, \"isLeaf\", {\r\n        get: function () { return !this.left && !this.right; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BTreeNode.prototype, \"children\", {\r\n        get: function () {\r\n            return [this.left, this.right].filter(function (item) { return !!item; });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return BTreeNode;\r\n}(Tree_1.ValueNode));\r\nexports.BTreeNode = BTreeNode;\r\nvar SearchBTreeTraverse;\r\n(function (SearchBTreeTraverse) {\r\n    SearchBTreeTraverse[SearchBTreeTraverse[\"Root\"] = 0] = \"Root\";\r\n    SearchBTreeTraverse[SearchBTreeTraverse[\"Left\"] = 1] = \"Left\";\r\n    SearchBTreeTraverse[SearchBTreeTraverse[\"Right\"] = 2] = \"Right\";\r\n})(SearchBTreeTraverse = exports.SearchBTreeTraverse || (exports.SearchBTreeTraverse = {}));\r\nvar BTree = /** @class */ (function (_super) {\r\n    __extends(BTree, _super);\r\n    function BTree(root, comparer) {\r\n        var e_1, _a;\r\n        var _this = _super.call(this, comparer) || this;\r\n        _this.root = root;\r\n        _this.__size = 0;\r\n        if (_this.root != undefined) {\r\n            try {\r\n                for (var _b = __values(_this.preOrderEnumerator()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var n = _c.value;\r\n                    _this.__size++;\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BTree.prototype, \"size\", {\r\n        get: function () { return this.__size; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    BTree.prototype.find = function (value) {\r\n        var key = this.findKey(value);\r\n        return key.comp == 0 ? key.node : undefined;\r\n    };\r\n    //(LNR)\r\n    BTree.prototype.inOrderEnumerator = function (node) {\r\n        var stack, count, n;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    stack = new Stack_1.default(), count = 0, n = node || this.root;\r\n                    _a.label = 1;\r\n                case 1:\r\n                    if (!(!stack.empty || n != undefined)) return [3 /*break*/, 5];\r\n                    if (!(n != undefined)) return [3 /*break*/, 2];\r\n                    stack.push(n);\r\n                    n = n.left;\r\n                    return [3 /*break*/, 4];\r\n                case 2:\r\n                    n = stack.pop();\r\n                    count++;\r\n                    return [4 /*yield*/, n];\r\n                case 3:\r\n                    _a.sent();\r\n                    n = n.right;\r\n                    _a.label = 4;\r\n                case 4: return [3 /*break*/, 1];\r\n                case 5: return [2 /*return*/, count];\r\n            }\r\n        });\r\n    };\r\n    BTree.prototype.postOrderEnumerator = function (node) {\r\n        var stack, n, lastNodeVisited, count, peekNode;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    stack = new Stack_1.default(), n = node || this.root, count = 0;\r\n                    _a.label = 1;\r\n                case 1:\r\n                    if (!(!stack.empty || n != undefined)) return [3 /*break*/, 6];\r\n                    if (!(n != undefined)) return [3 /*break*/, 2];\r\n                    stack.push(n);\r\n                    n = n.left;\r\n                    return [3 /*break*/, 5];\r\n                case 2:\r\n                    peekNode = stack.peek();\r\n                    if (!(peekNode.right != undefined && lastNodeVisited != peekNode.right)) return [3 /*break*/, 3];\r\n                    n = peekNode.right;\r\n                    return [3 /*break*/, 5];\r\n                case 3:\r\n                    count++;\r\n                    return [4 /*yield*/, peekNode];\r\n                case 4:\r\n                    _a.sent();\r\n                    lastNodeVisited = stack.pop();\r\n                    _a.label = 5;\r\n                case 5: return [3 /*break*/, 1];\r\n                case 6: return [2 /*return*/, count];\r\n            }\r\n        });\r\n    };\r\n    BTree.prototype.newNode = function (value) {\r\n        return new BTreeNode(value);\r\n    };\r\n    BTree.prototype.findKey = function (value) {\r\n        var comp = 0, parent = void 0, node = this.root;\r\n        while (node != undefined) {\r\n            parent = node;\r\n            comp = this.comparer(value, node.value);\r\n            if (comp == 0) {\r\n                return {\r\n                    node: node,\r\n                    parent: parent,\r\n                    comp: comp\r\n                };\r\n            }\r\n            else if (comp < 0) {\r\n                node = node.left;\r\n            }\r\n            else {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return { node: node, parent: parent, comp: comp };\r\n    };\r\n    BTree.prototype.min = function (node) {\r\n        if (node)\r\n            while (node.left != undefined)\r\n                node = node.left;\r\n        return node;\r\n    };\r\n    BTree.prototype.max = function (node) {\r\n        if (node)\r\n            while (node.right != undefined)\r\n                node = node.right;\r\n        return node;\r\n    };\r\n    BTree.prototype.insert = function (value) {\r\n        //will be implemented later\r\n        return false;\r\n    };\r\n    BTree.prototype.delete = function (value) {\r\n        //will be implemented later\r\n        return false;\r\n    };\r\n    BTree.prototype.insertRange = function (values) {\r\n        var _this = this;\r\n        var array = [];\r\n        values.forEach(function (value) { return array.push(_this.insert(value)); });\r\n        return array;\r\n    };\r\n    BTree.prototype.deleteRange = function (values) {\r\n        var _this = this;\r\n        var array = [];\r\n        values.forEach(function (value) { return array.push(_this.delete(value)); });\r\n        return array;\r\n    };\r\n    return BTree;\r\n}(Tree_1.BaseTree));\r\nexports.BTree = BTree;\r\n\n\n//# sourceURL=webpack:///./src/lib/BTree.ts?");

/***/ }),

/***/ "./src/lib/Queue.ts":
/*!**************************!*\
  !*** ./src/lib/Queue.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __spread = (this && this.__spread) || function () {\r\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Stack_1 = __importDefault(__webpack_require__(/*! ./Stack */ \"./src/lib/Stack.ts\"));\r\nvar Queue = /** @class */ (function (_super) {\r\n    __extends(Queue, _super);\r\n    function Queue() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Queue.prototype.dequeue = function () { return this.pop(); };\r\n    Queue.prototype.enqueue = function (t) { return this.n.unshift(t); };\r\n    Queue.prototype.peek = function () { return this.n[0]; };\r\n    Queue.prototype.peekback = function () { return _super.prototype.peek.call(this); };\r\n    Queue.from = function (initialData) {\r\n        var _a;\r\n        if (initialData === void 0) { initialData = []; }\r\n        var q = new Queue();\r\n        (_a = q.n).unshift.apply(_a, __spread(initialData));\r\n        return q;\r\n    };\r\n    return Queue;\r\n}(Stack_1.default));\r\nexports.default = Queue;\r\n\n\n//# sourceURL=webpack:///./src/lib/Queue.ts?");

/***/ }),

/***/ "./src/lib/RedBlackTree.ts":
/*!*********************************!*\
  !*** ./src/lib/RedBlackTree.ts ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RedBlackTree = exports.RedBlackTreeNode = exports.RedBlackEnum = void 0;\r\nvar BTree_1 = __webpack_require__(/*! ./BTree */ \"./src/lib/BTree.ts\");\r\nvar Stack_1 = __importDefault(__webpack_require__(/*! ./Stack */ \"./src/lib/Stack.ts\"));\r\nvar RedBlackEnum;\r\n(function (RedBlackEnum) {\r\n    RedBlackEnum[RedBlackEnum[\"red\"] = 0] = \"red\";\r\n    RedBlackEnum[RedBlackEnum[\"black\"] = 1] = \"black\";\r\n})(RedBlackEnum = exports.RedBlackEnum || (exports.RedBlackEnum = {}));\r\nvar RedBlackTreeNode = /** @class */ (function (_super) {\r\n    __extends(RedBlackTreeNode, _super);\r\n    function RedBlackTreeNode(value) {\r\n        var _this = _super.call(this, value) || this;\r\n        _this.color = RedBlackEnum.red;\r\n        return _this;\r\n    }\r\n    return RedBlackTreeNode;\r\n}(BTree_1.BTreeNode));\r\nexports.RedBlackTreeNode = RedBlackTreeNode;\r\nvar RedBlackTree = /** @class */ (function (_super) {\r\n    __extends(RedBlackTree, _super);\r\n    function RedBlackTree(comparer) {\r\n        return _super.call(this, undefined, comparer) || this;\r\n    }\r\n    RedBlackTree.prototype.insert = function (value) {\r\n        var stack = new Stack_1.default(), parent = void 0, node = this.root, comp = 0;\r\n        if (node == undefined) {\r\n            this.root = node = newNode(value);\r\n            node.color = RedBlackEnum.black;\r\n            this.__size++;\r\n            return true;\r\n        }\r\n        while (node != undefined) {\r\n            parent = node;\r\n            comp = this.comparer(value, node.value);\r\n            if (comp == 0)\r\n                return false;\r\n            else {\r\n                if (comp < 0)\r\n                    node = node.left;\r\n                else\r\n                    node = node.right;\r\n                stack.push(parent);\r\n            }\r\n        }\r\n        node = newNode(value);\r\n        setChild(parent, node, comp);\r\n        balanceAfterInsert(this, node, stack);\r\n        this.__size++;\r\n        return true;\r\n    };\r\n    RedBlackTree.prototype.delete = function (value) {\r\n        var found = false, comp = 0, stack = new Stack_1.default(), parent = void 0, node = this.root, yIsNode, x, ycomp = 0, yParent, y;\r\n        while (node != undefined && !found) {\r\n            var nextComp = this.comparer(value, node.value);\r\n            if (nextComp == 0)\r\n                found = true;\r\n            else {\r\n                parent = node;\r\n                if (nextComp < 0) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n                stack.push(parent);\r\n                comp = nextComp;\r\n            }\r\n        }\r\n        if (!found)\r\n            return false;\r\n        // \"node\" to be deleted: \r\n        //\t  is a leaf with no children\r\n        //\t  has one child\r\n        //\t  has two children\r\n        // if \"node\" is red, the red black properties still hold.\r\n        // if \"node\" is black, the tree needs rebalancing and/or recolouring\r\n        if (node.left == undefined || node.right == undefined) {\r\n            //node is leaf or has at least one empty child\r\n            y = node;\r\n            yParent = parent;\r\n            yIsNode = true;\r\n        }\r\n        else {\r\n            //node has 2 children\r\n            //replacement node is the leftmost node greater than \"node\"\r\n            stack.push(node);\r\n            y = node.right;\r\n            yParent = node;\r\n            yIsNode = false;\r\n            while (y.left != undefined) {\r\n                stack.push(y);\r\n                yParent = y;\r\n                y = y.left;\r\n            }\r\n        }\r\n        //y has the replacement node here, it's \"value\" content will be copied to \"node\"\r\n        //x is y's only child, it'll be linked to y's parent\r\n        if (y.left != undefined)\r\n            x = y.left;\r\n        else\r\n            x = y.right;\r\n        // replace x's parent with y's parent and link x to proper subtree in parent, this removes y from tree\r\n        if (yParent != undefined) {\r\n            setChild(yParent, x, ycomp = this.comparer(y.value, yParent.value));\r\n        }\r\n        else {\r\n            this.root = x;\r\n            (x != undefined) && (x.color = RedBlackEnum.black);\r\n            this.__size--;\r\n            return true;\r\n        }\r\n        !yIsNode && (node.value = y.value);\r\n        if (y.color == RedBlackEnum.black) {\r\n            // x may be undefined\r\n            balanceAfterDelete(this, x, stack, ycomp);\r\n        }\r\n        this.__size--;\r\n        return true;\r\n    };\r\n    return RedBlackTree;\r\n}(BTree_1.BTree));\r\nexports.RedBlackTree = RedBlackTree;\r\nvar siblingComparer = function (comp) { return comp > 0 ? -1 : 1; };\r\nfunction setChild(parent, node, comp) {\r\n    if (comp < 0)\r\n        parent.left = node;\r\n    else\r\n        parent.right = node;\r\n}\r\nfunction getChild(parent, comp) {\r\n    return (comp < 0 ? parent.left : parent.right);\r\n}\r\nfunction newNode(value) {\r\n    return new RedBlackTreeNode(value);\r\n}\r\nfunction getColor(node) {\r\n    return node == undefined ?\r\n        RedBlackEnum.black :\r\n        node.color;\r\n}\r\nfunction rotateLeft(x, tree, stack, pushParent) {\r\n    var p = stack.peek(), y = x.right;\r\n    x.right = y.left;\r\n    y.left = x;\r\n    pushParent && stack.push(y);\r\n    if (p != undefined)\r\n        setChild(p, y, tree.comparer(y.value, p.value));\r\n    else\r\n        tree.root = y;\r\n}\r\nfunction rotateRight(x, tree, stack, pushParent) {\r\n    var p = stack.peek(), y = x.left;\r\n    x.left = y.right;\r\n    y.right = x;\r\n    pushParent && stack.push(y);\r\n    if (p != undefined)\r\n        setChild(p, y, tree.comparer(y.value, p.value));\r\n    else\r\n        tree.root = y;\r\n}\r\nfunction balanceAfterInsert(tree, x, stack) {\r\n    var t, g, p, y = x.left, comp = 0;\r\n    while (stack.count >= 2 && (p = stack.pop()).color == RedBlackEnum.red) {\r\n        //parent is RED\r\n        g = stack.peek();\r\n        comp = tree.comparer(p.value, g.value);\r\n        //get x's parent uncle y\r\n        if (comp < 0)\r\n            y = g.right;\r\n        else\r\n            y = g.left;\r\n        if (y != undefined && y.color == RedBlackEnum.red) {\r\n            //uncle is RED, change x's parent and uncle to black\r\n            p.color = RedBlackEnum.black;\r\n            y.color = RedBlackEnum.black;\r\n            // grandparent must be red. Why? Every red node that is not \r\n            // a leaf has only black children\r\n            g.color = RedBlackEnum.red;\r\n            stack.pop();\r\n            x = g;\r\n        }\r\n        else {\r\n            //uncle is BLACK\r\n            if (comp < 0) {\r\n                if (tree.comparer(x.value, p.value) > 0) {\r\n                    // x > p, rotate left, make x a left child\r\n                    rotateLeft(p, tree, stack, false);\r\n                    //this's faster than ES6 array destructuring\r\n                    t = x;\r\n                    x = p;\r\n                    p = t;\r\n                }\r\n                // x < p\r\n                p.color = RedBlackEnum.black;\r\n                g.color = RedBlackEnum.red;\r\n                stack.pop();\r\n                rotateRight(g, tree, stack, true);\r\n            }\r\n            else {\r\n                if (tree.comparer(x.value, p.value) < 0) {\r\n                    // x < p, rotate right, make x a right child\r\n                    rotateRight(p, tree, stack, false);\r\n                    //this's faster than ES6 array destructuring\r\n                    t = x;\r\n                    x = p;\r\n                    p = t;\r\n                }\r\n                // x > p\r\n                p.color = RedBlackEnum.black;\r\n                g.color = RedBlackEnum.red;\r\n                stack.pop();\r\n                rotateLeft(g, tree, stack, true);\r\n            }\r\n        }\r\n    }\r\n    tree.root.color = RedBlackEnum.black;\r\n}\r\nfunction balanceAfterDelete(tree, x, stack, comp) {\r\n    var parent, y;\r\n    while (!stack.empty && getColor(x) == RedBlackEnum.black) {\r\n        parent = stack.peek();\r\n        y = getChild(parent, siblingComparer(comp));\r\n        if (comp < 0) {\r\n            //x is left child, y is right child\r\n            if (getColor(y) == RedBlackEnum.red) {\r\n                // x is black, y is red - make both black and rotate\r\n                y.color = RedBlackEnum.black;\r\n                parent.color = RedBlackEnum.red;\r\n                stack.pop();\r\n                rotateLeft(parent, tree, stack, true);\r\n                stack.push(parent);\r\n                y = parent.right;\r\n            }\r\n            if (y == undefined ||\r\n                (getColor(y.left) == RedBlackEnum.black &&\r\n                    getColor(y.right) == RedBlackEnum.black)) {\r\n                //y children are both black or y is a leaf\r\n                (y != undefined) && (y.color = RedBlackEnum.red);\r\n                //move up\r\n                stack.pop();\r\n                x = parent;\r\n                parent = stack.peek();\r\n                (parent != undefined) && (comp = tree.comparer(x.value, parent.value));\r\n            }\r\n            else {\r\n                if (getColor(y.right) == RedBlackEnum.black) {\r\n                    y.left.color = RedBlackEnum.black;\r\n                    y.color = RedBlackEnum.red;\r\n                    rotateRight(y, tree, stack, false);\r\n                    y = getChild(parent, 1);\r\n                }\r\n                y.color = parent.color; // x.parent.color\r\n                parent.color = RedBlackEnum.black;\r\n                y.right.color = RedBlackEnum.black;\r\n                stack.pop();\r\n                rotateLeft(parent, tree, stack, false);\r\n                stack.clear();\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            //y is left child, x is right child\r\n            //y could be null\r\n            if (getColor(y) == RedBlackEnum.red) {\r\n                // x is black, y is red - make both black and rotate\r\n                y.color = RedBlackEnum.black;\r\n                parent.color = RedBlackEnum.red;\r\n                stack.pop();\r\n                rotateRight(parent, tree, stack, true);\r\n                stack.push(parent);\r\n                y = parent.left;\r\n            }\r\n            if (y == undefined ||\r\n                (getColor(y.left) == RedBlackEnum.black &&\r\n                    getColor(y.right) == RedBlackEnum.black)) {\r\n                //y children are both black or y is a leaf\r\n                (y != undefined) && (y.color = RedBlackEnum.red);\r\n                //move up\r\n                stack.pop();\r\n                x = parent;\r\n                parent = stack.peek();\r\n                (parent != undefined) && (comp = tree.comparer(x.value, parent.value));\r\n            }\r\n            else {\r\n                if (getColor(y.left) == RedBlackEnum.black) {\r\n                    y.right.color = RedBlackEnum.black;\r\n                    y.color = RedBlackEnum.red;\r\n                    rotateLeft(y, tree, stack, false);\r\n                    y = getChild(parent, -1);\r\n                }\r\n                y.color = parent.color; // x.parent.color\r\n                parent.color = RedBlackEnum.black;\r\n                y.left.color = RedBlackEnum.black;\r\n                stack.pop();\r\n                rotateRight(parent, tree, stack, false);\r\n                stack.clear();\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    (x != undefined) && (x.color = RedBlackEnum.black);\r\n}\r\n\n\n//# sourceURL=webpack:///./src/lib/RedBlackTree.ts?");

/***/ }),

/***/ "./src/lib/Stack.ts":
/*!**************************!*\
  !*** ./src/lib/Stack.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __spread = (this && this.__spread) || function () {\r\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Stack = /** @class */ (function () {\r\n    function Stack() {\r\n        this.clear();\r\n    }\r\n    Object.defineProperty(Stack.prototype, \"count\", {\r\n        get: function () { return this.n.length; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Stack.prototype, \"last\", {\r\n        get: function () { return this.n.length - 1; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Stack.prototype, \"items\", {\r\n        get: function () { return this.n.slice(0); },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Stack.prototype, \"empty\", {\r\n        get: function () { return !this.n.length; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Stack.prototype.pop = function () { return this.n.pop(); };\r\n    Stack.prototype.push = function (t) { return this.n.push(t); };\r\n    Stack.prototype.peek = function () { return this.n[this.last]; };\r\n    Stack.prototype.clear = function () { this.n = new Array(); };\r\n    Stack.from = function (initialData) {\r\n        var _a;\r\n        if (initialData === void 0) { initialData = []; }\r\n        var s = new Stack();\r\n        (_a = s.n).push.apply(_a, __spread(initialData));\r\n        return s;\r\n    };\r\n    return Stack;\r\n}());\r\nexports.default = Stack;\r\n\n\n//# sourceURL=webpack:///./src/lib/Stack.ts?");

/***/ }),

/***/ "./src/lib/Tree.ts":
/*!*************************!*\
  !*** ./src/lib/Tree.ts ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __spread = (this && this.__spread) || function () {\r\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Tree = exports.BaseTree = exports.TreeNode = exports.ValueNode = void 0;\r\nvar Queue_1 = __importDefault(__webpack_require__(/*! ./Queue */ \"./src/lib/Queue.ts\"));\r\nvar Stack_1 = __importDefault(__webpack_require__(/*! ./Stack */ \"./src/lib/Stack.ts\"));\r\nvar ValueNode = /** @class */ (function () {\r\n    function ValueNode(value) {\r\n        this.value = value;\r\n    }\r\n    Object.defineProperty(ValueNode.prototype, \"length\", {\r\n        /**\r\n         * @description return the amount of children\r\n         */\r\n        get: function () { return this.children.length; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @description children indexer\r\n     * @param index 0-based index of child\r\n     */\r\n    ValueNode.prototype.get = function (index) { return this.children[index]; };\r\n    return ValueNode;\r\n}());\r\nexports.ValueNode = ValueNode;\r\nvar TreeNode = /** @class */ (function (_super) {\r\n    __extends(TreeNode, _super);\r\n    function TreeNode(value) {\r\n        var childrenNodes = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            childrenNodes[_i - 1] = arguments[_i];\r\n        }\r\n        var _this = _super.call(this, value) || this;\r\n        _this.__children = new (Array.bind.apply(Array, __spread([void 0], childrenNodes)))();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(TreeNode.prototype, \"children\", {\r\n        get: function () { return this.__children.slice(0); },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeNode.prototype, \"size\", {\r\n        get: function () { return this.__children.length; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeNode.prototype, \"isLeaf\", {\r\n        get: function () { return this.size == 0; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    TreeNode.prototype.add = function (value) {\r\n        var n = new TreeNode(value);\r\n        this.__children.push(n);\r\n        return n;\r\n    };\r\n    TreeNode.prototype.remove = function (value, comparer) {\r\n        var defaultComparer = function (item) { return item.value === value; }, n = this.__children.findIndex(comparer || defaultComparer);\r\n        return n != -1 ? this.__children.splice(n, 1)[0] : undefined;\r\n    };\r\n    TreeNode.prototype.removeAt = function (index) {\r\n        return index >= 0 && index < this.size ? this.__children.splice(index, 1)[0] : undefined;\r\n    };\r\n    TreeNode.prototype.find = function (value, comparer) {\r\n        var defaultComparer = function (item) { return item.value === value; };\r\n        return this.__children.find(comparer || defaultComparer);\r\n    };\r\n    return TreeNode;\r\n}(ValueNode));\r\nexports.TreeNode = TreeNode;\r\nvar BaseTree = /** @class */ (function () {\r\n    function BaseTree(comparer) {\r\n        this.__comp = comparer || compare;\r\n    }\r\n    BaseTree.prototype.empty = function () { return this.root == undefined; };\r\n    BaseTree.prototype.clear = function () {\r\n        this.root = void 0;\r\n    };\r\n    Object.defineProperty(BaseTree.prototype, \"comparer\", {\r\n        get: function () { return this.__comp; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @description it calls levelOrder from root, and returns it's result with empty callback.\r\n     */\r\n    BaseTree.prototype.depth = function () {\r\n        var result, enumerator = this.levelOrderEnumerator();\r\n        while (!(result = enumerator.next()).done)\r\n            ;\r\n        return result.value;\r\n    };\r\n    BaseTree.prototype.preOrderEnumerator = function (node) {\r\n        var stack, count, children, i;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    stack = new Stack_1.default(), count = 0;\r\n                    !node && (node = this.root);\r\n                    if (!node) return [3 /*break*/, 3];\r\n                    stack.push(node);\r\n                    _a.label = 1;\r\n                case 1:\r\n                    if (!!stack.empty) return [3 /*break*/, 3];\r\n                    count++;\r\n                    node = stack.pop();\r\n                    return [4 /*yield*/, node];\r\n                case 2:\r\n                    _a.sent();\r\n                    for (children = node.children, i = children.length - 1; i >= 0; i--) {\r\n                        stack.push(children[i]);\r\n                    }\r\n                    return [3 /*break*/, 1];\r\n                case 3: return [2 /*return*/, count];\r\n            }\r\n        });\r\n    };\r\n    BaseTree.prototype.preOrderIterator = function (node) {\r\n        var _a;\r\n        var enumerator = this.preOrderEnumerator(node), iterator = (_a = {\r\n                //Iterator protocol\r\n                next: function () {\r\n                    return enumerator.next();\r\n                }\r\n            },\r\n            //Iterable protocol\r\n            _a[Symbol.iterator] = function () {\r\n                return iterator;\r\n            },\r\n            _a);\r\n        return iterator;\r\n    };\r\n    /**\r\n     * @description it's an extended breadthSearch with a tree node level value\r\n     * @param node root node to calculate level order\r\n     * @param callback a function called for every tree node with it's level 1-based\r\n     */\r\n    BaseTree.prototype.levelOrderEnumerator = function (node) {\r\n        var queue, maxLevel, _loop_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    queue = new Queue_1.default(), maxLevel = 0;\r\n                    !node && (node = this.root);\r\n                    if (!node) return [3 /*break*/, 3];\r\n                    queue.enqueue({ node: node, level: 1 });\r\n                    _loop_1 = function () {\r\n                        var father;\r\n                        return __generator(this, function (_a) {\r\n                            switch (_a.label) {\r\n                                case 0:\r\n                                    father = queue.dequeue();\r\n                                    maxLevel = Math.max(maxLevel, father.level);\r\n                                    return [4 /*yield*/, {\r\n                                            node: father.node,\r\n                                            level: father.level\r\n                                        }];\r\n                                case 1:\r\n                                    _a.sent();\r\n                                    father.node.children.forEach(function (child) { return queue.enqueue({ node: child, level: father.level + 1 }); });\r\n                                    return [2 /*return*/];\r\n                            }\r\n                        });\r\n                    };\r\n                    _a.label = 1;\r\n                case 1:\r\n                    if (!!queue.empty) return [3 /*break*/, 3];\r\n                    return [5 /*yield**/, _loop_1()];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 1];\r\n                case 3: return [2 /*return*/, maxLevel];\r\n            }\r\n        });\r\n    };\r\n    BaseTree.prototype.postOrderEnumerator = function (node) {\r\n        var stack, count, n, children, i;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    stack = new Stack_1.default(), count = 0;\r\n                    !node && (node = this.root);\r\n                    if (!node) return [3 /*break*/, 5];\r\n                    stack.push({ node: node, t: false });\r\n                    _a.label = 1;\r\n                case 1:\r\n                    if (!!stack.empty) return [3 /*break*/, 5];\r\n                    n = stack.peek();\r\n                    if (!n.t) return [3 /*break*/, 3];\r\n                    count++;\r\n                    return [4 /*yield*/, n.node];\r\n                case 2:\r\n                    _a.sent();\r\n                    stack.pop();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    n.t = true;\r\n                    for (children = n.node.children, i = children.length - 1; i >= 0; i--) {\r\n                        stack.push({ node: children[i], t: false });\r\n                    }\r\n                    _a.label = 4;\r\n                case 4: return [3 /*break*/, 1];\r\n                case 5: return [2 /*return*/, count];\r\n            }\r\n        });\r\n    };\r\n    BaseTree.prototype.breathSearchEnumerator = function (node) {\r\n        var queue, count;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    queue = new Queue_1.default(), count = 0;\r\n                    !node && (node = this.root);\r\n                    if (!node) return [3 /*break*/, 3];\r\n                    queue.enqueue(node);\r\n                    _a.label = 1;\r\n                case 1:\r\n                    if (!!queue.empty) return [3 /*break*/, 3];\r\n                    node = queue.dequeue();\r\n                    count++;\r\n                    return [4 /*yield*/, node];\r\n                case 2:\r\n                    _a.sent();\r\n                    node.children.forEach(function (child) { return queue.enqueue(child); });\r\n                    return [3 /*break*/, 1];\r\n                case 3: return [2 /*return*/, count];\r\n            }\r\n        });\r\n    };\r\n    return BaseTree;\r\n}());\r\nexports.BaseTree = BaseTree;\r\nvar Tree = /** @class */ (function (_super) {\r\n    __extends(Tree, _super);\r\n    function Tree(root, comparer) {\r\n        var _this = _super.call(this, comparer) || this;\r\n        _this.root = root;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @description implements a breadth search\r\n     * @param value value to search\r\n     */\r\n    Tree.prototype.find = function (value) {\r\n        var queue = new Queue_1.default(), node = this.root;\r\n        if (node) {\r\n            queue.enqueue(node);\r\n            while (!queue.empty) {\r\n                node = queue.dequeue();\r\n                if (this.comparer(node.value, value) == 0) {\r\n                    queue.clear();\r\n                    return node;\r\n                }\r\n                else {\r\n                    node.children.forEach(function (child) { return queue.enqueue(child); });\r\n                }\r\n            }\r\n        }\r\n        return;\r\n    };\r\n    return Tree;\r\n}(BaseTree));\r\nexports.Tree = Tree;\r\nfunction compare(a, b) {\r\n    if (a == b)\r\n        return 0;\r\n    else if (a > b)\r\n        return 1;\r\n    else\r\n        return -1;\r\n}\r\n\n\n//# sourceURL=webpack:///./src/lib/Tree.ts?");

/***/ }),

/***/ "./src/lib/Utils.ts":
/*!**************************!*\
  !*** ./src/lib/Utils.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __spread = (this && this.__spread) || function () {\r\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ready = exports.gEId = exports.qSA = exports.qS = exports.rEL = exports.aEL = exports.html = exports.svg = exports.tag = exports.attr = exports.css = exports.isStr = exports.enumConditional = exports.matrix = exports.selectMany = exports.range = exports.replaceAt = exports.formatNumber = exports.centerPadStr = exports.centerStr = exports.padStr = exports.fillChar = exports.pad = exports.toBool = void 0;\r\nvar a = {\r\n    'true': true,\r\n    'false': false,\r\n    'undefined': false,\r\n    'null': false,\r\n    '1': true,\r\n    '0': false\r\n};\r\nvar svgNS = \"http://www.w3.org/2000/svg\";\r\nexports.toBool = function (val) { return a[val]; };\r\n//used for string & numbers\r\nexports.pad = function (t, e, ch) {\r\n    return new Array(Math.max(0, (e || 2) + 1 - String(t).length)).join(ch ? ch : '0') + t;\r\n};\r\nexports.fillChar = function (ch, len) { return new Array(len).join(ch); };\r\nexports.padStr = function (s, width) { return new Array(Math.max(0, width - s.length)).join(' ') + s; };\r\nexports.centerStr = function (s, width) {\r\n    var w = (width - s.length) / 2 | 0;\r\n    return (exports.fillChar(' ', w + 1) + s + exports.fillChar(' ', w + 1)).substr(0, width);\r\n};\r\nexports.centerPadStr = function (str, width, leftStr, rightStr) {\r\n    var w = (width - str.length) / 2 | 0, getChar = function (s) { return (s && (s = s[0]), s || ' '); };\r\n    return (exports.fillChar(getChar(leftStr), w + 1) + str + exports.fillChar(getChar(rightStr), w + 1)).substr(0, width);\r\n};\r\nexports.formatNumber = function (n, width) { return exports.padStr(n + \"\", width); };\r\nexports.replaceAt = function (str, index, replacement) {\r\n    return str.substr(0, index) + replacement + str.substr(index + replacement.length);\r\n};\r\nexports.range = function (s, e) { return Array.from('x'.repeat(e - s), function (_, i) { return s + i; }); };\r\nexports.selectMany = function (input, selectListFn) {\r\n    return input.reduce(function (out, inx) {\r\n        out.push.apply(out, __spread(selectListFn(inx)));\r\n        return out;\r\n    }, new Array());\r\n};\r\nexports.matrix = function (rows, cols, filler) {\r\n    return Array.from({ length: rows }, function () { return new Array(cols).fill(filler); });\r\n};\r\nexports.enumConditional = function (start, max, discovered) {\r\n    var nextNdx = function (ndx) { return ndx >= max ? 0 : ++ndx; }, curr = start < 0 || start > max ? -1 : start, first = true;\r\n    return {\r\n        current: function () { return curr; },\r\n        next: function () {\r\n            if (curr < 0)\r\n                return false;\r\n            if (first) {\r\n                return first = false, true;\r\n            }\r\n            else {\r\n                while (!((curr = nextNdx(curr)) == start || !discovered(curr)))\r\n                    ;\r\n                return curr != start;\r\n            }\r\n        }\r\n    };\r\n};\r\nexports.isStr = function (s) { return typeof s === \"string\"; };\r\nexports.css = function (el, styles) {\r\n    if (exports.isStr(styles))\r\n        return el.style[styles];\r\n    for (var prop in styles)\r\n        el.style[prop] = styles[prop];\r\n    return el;\r\n};\r\nexports.attr = function (el, attrs) {\r\n    if (exports.isStr(attrs))\r\n        return el.getAttribute(attrs);\r\n    for (var attr_1 in attrs)\r\n        el.setAttribute(attr_1, attrs[attr_1]);\r\n    return el;\r\n};\r\nexports.tag = function (tagName, id, nsAttrs) { return (id && (nsAttrs.id = id),\r\n    exports.attr(document.createElementNS(svgNS, tagName), nsAttrs)); };\r\nexports.svg = function (html) {\r\n    var template = document.createElementNS(svgNS, \"template\");\r\n    template.innerHTML = html;\r\n    return template.children[0];\r\n};\r\nexports.html = function (html) {\r\n    var template = document.createElement(\"template\");\r\n    template.innerHTML = html;\r\n    return template.content.firstChild;\r\n};\r\nexports.aEL = function (el, eventName, fn, b) { return el.addEventListener(eventName, fn, b); };\r\nexports.rEL = function (el, eventName, fn, b) { return el.removeEventListener(eventName, fn, b); };\r\nexports.qS = function (s) { return document.querySelector(s); };\r\nexports.qSA = function (s) { return document.querySelectorAll(s); };\r\nexports.gEId = function (id) { return document.getElementById(id); };\r\nexports.ready = function (fn) {\r\n    if (typeof fn != \"function\") {\r\n        return !1;\r\n    }\r\n    if (document.readyState != \"loading\")\r\n        return (fn(), !0);\r\n    else if (document[\"addEventListener\"])\r\n        exports.aEL(document, \"DOMContentLoaded\", fn, false);\r\n    else\r\n        document.attachEvent(\"onreadystatechange\", function () {\r\n            if (document.readyState == \"complete\")\r\n                fn();\r\n        });\r\n    return !0;\r\n};\r\n\n\n//# sourceURL=webpack:///./src/lib/Utils.ts?");

/***/ }),

/***/ "./src/test/css/rbt.css":
/*!******************************!*\
  !*** ./src/test/css/rbt.css ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/test/css/rbt.css?");

/***/ }),

/***/ "./src/test/rbt.ts":
/*!*************************!*\
  !*** ./src/test/rbt.ts ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar RedBlackTree_1 = __webpack_require__(/*! ../lib/RedBlackTree */ \"./src/lib/RedBlackTree.ts\");\r\nvar tree_utils_1 = __webpack_require__(/*! ./tree-utils */ \"./src/test/tree-utils.ts\");\r\nvar Utils_1 = __webpack_require__(/*! src/lib/Utils */ \"./src/lib/Utils.ts\");\r\nvar ratio = window.screen.width / window.screen.height, svg = document.querySelector('svg'), vbinfo = Utils_1.qS(\"#canvas-info\"), node = Utils_1.qS(\"#node-value\"), cons = Utils_1.qS(\"#cons-out>div:nth-of-type(2)\"), treeSize = Utils_1.qS(\"#tree-size\"), leftpad = 20, toppad = 40, xstart = leftpad, ystart = toppad, rowHeight = ystart, viewbox = setViewBox(0, 0, svg.clientWidth * ratio | 0, svg.clientHeight * ratio | 0), options = void 0, svgRowItems = [], maxYcaption = Number.MIN_SAFE_INTEGER;\r\nclearSVG(createTree());\r\nUtils_1.aEL(Utils_1.qS(\"#clear-tree\"), \"click\", function () {\r\n    clearSVG(createTree());\r\n}, false);\r\nUtils_1.aEL(Utils_1.qS(\"#load-sample\"), \"click\", function (e) {\r\n    clearSVG(getTreeSample());\r\n    addSVGTree(\"sample tree\");\r\n}, false);\r\nUtils_1.aEL(Utils_1.qS(\"#insert\"), \"click\", function (e) {\r\n    var nodeValue = getNodeValue(), value = parseFloat(nodeValue);\r\n    if (isNaN(value)) {\r\n        logMsg(\"invalid number: \" + nodeValue);\r\n    }\r\n    else {\r\n        if (options.tree.insert(createNode(value))) {\r\n            addSVGTree(\"added: \" + value);\r\n        }\r\n        else {\r\n            logMsg(\"could not insert: \" + nodeValue);\r\n        }\r\n    }\r\n}, false);\r\nUtils_1.aEL(Utils_1.qS(\"#delete\"), \"click\", function (e) {\r\n    var nodeValue = getNodeValue(), value = parseFloat(nodeValue);\r\n    if (isNaN(value)) {\r\n        logMsg(\"invalid number: \" + nodeValue);\r\n    }\r\n    else {\r\n        if (options.tree.delete(createNode(value))) {\r\n            addSVGTree(\"deleted: \" + value);\r\n        }\r\n        else {\r\n            logMsg(\"could not insert: \" + nodeValue);\r\n        }\r\n    }\r\n}, false);\r\nfunction setViewBox(x, y, w, h) {\r\n    Utils_1.attr(svg, { \"viewBox\": x + \" \" + y + \" \" + w + \" \" + h });\r\n    vbinfo.innerText = \"x: \" + x + \", y: \" + y + \", width: \" + w + \", height: \" + h;\r\n    return {\r\n        x: x,\r\n        y: y,\r\n        width: w,\r\n        height: h\r\n    };\r\n}\r\nfunction createTree() {\r\n    return new RedBlackTree_1.RedBlackTree(function (a, b) {\r\n        if (a.value == b.value)\r\n            return 0;\r\n        else if (a.value > b.value)\r\n            return 1;\r\n        else\r\n            return -1;\r\n    });\r\n}\r\nfunction createNode(value) {\r\n    return {\r\n        value: value\r\n    };\r\n}\r\nfunction getTreeSample() {\r\n    var t = createTree(), array = [7, 3, 18, 10, 22, 8, 11, 26, 2, 6, 13].map(function (v) { return createNode(v); });\r\n    t.insertRange(array);\r\n    return t;\r\n}\r\nfunction getNodeValue() {\r\n    var nodeValue = node.value;\r\n    node.value = \"\";\r\n    return nodeValue;\r\n}\r\nfunction getTreeSizeLabel() {\r\n    return \"Size: \" + options.tree.size;\r\n}\r\nfunction clearSVG(tree) {\r\n    svg.innerHTML = \"\";\r\n    leftpad = 20;\r\n    toppad = 40;\r\n    xstart = leftpad;\r\n    ystart = toppad;\r\n    rowHeight = ystart;\r\n    options = {\r\n        svg: svg,\r\n        tree: tree,\r\n        caption: \"[caption]\",\r\n        WIDTH: 40,\r\n        HEIGHT: 60,\r\n        FONT_SIZE: 20,\r\n        x: 0,\r\n        y: 0,\r\n        nodeClass: function (node) { return RedBlackTree_1.RedBlackEnum[node.color]; },\r\n        nodeValue: function (node) { return String(node.value); }\r\n    };\r\n    cons.innerHTML = \"\";\r\n    treeSize.innerText = getTreeSizeLabel();\r\n    svgRowItems = [];\r\n}\r\nfunction logMsg(msg) {\r\n    cons.appendChild(Utils_1.html(\"<div>\" + msg + \"</div>\"));\r\n}\r\nfunction addSVGTree(caption) {\r\n    treeSize.innerText = getTreeSizeLabel();\r\n    options.caption = caption;\r\n    options.x = xstart;\r\n    options.y = ystart;\r\n    var svgTree = tree_utils_1.BTreeVisualizer(options);\r\n    rowHeight = Math.max(rowHeight, svgTree.height);\r\n    if (svgTree.width + xstart > viewbox.width) {\r\n        moveToNextRow();\r\n        svgTree.svg.setAttribute(\"transform\", \"translate(\" + xstart + \" \" + ystart + \")\");\r\n        svgRowItems = [svgTree.svg];\r\n        maxYcaption = svgTree.height;\r\n    }\r\n    else {\r\n        svgRowItems.push(svgTree.svg);\r\n        //adjust g>text\r\n        maxYcaption = Math.max(maxYcaption, svgTree.height);\r\n        svgRowItems.forEach(function (svg) {\r\n            var text = svg.querySelector(\"text.caption\");\r\n            Utils_1.attr(text, {\r\n                y: maxYcaption\r\n            });\r\n        });\r\n    }\r\n    xstart += leftpad * 2 + svgTree.width;\r\n}\r\nfunction moveToNextRow() {\r\n    xstart = leftpad * 2;\r\n    ystart += rowHeight + toppad * 2;\r\n    rowHeight = 0;\r\n}\r\n\n\n//# sourceURL=webpack:///./src/test/rbt.ts?");

/***/ }),

/***/ "./src/test/tree-utils.ts":
/*!********************************!*\
  !*** ./src/test/tree-utils.ts ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BTreeVisualizer = void 0;\r\nvar Utils_1 = __webpack_require__(/*! ../lib/Utils */ \"./src/lib/Utils.ts\");\r\n;\r\nfunction BTreeVisualizer(conf) {\r\n    var depth = 0, width = 0, height = 0, svgTree = Utils_1.tag(\"g\", \"\", {\r\n        class: \"svg-tree\",\r\n        transform: \"translate(\" + (conf.x | 0) + \" \" + (conf.y | 0) + \")\"\r\n    }), svgCaption = Utils_1.tag(\"text\", \"\", {\r\n        class: \"caption\",\r\n        \"font-size\": conf.FONT_SIZE,\r\n    });\r\n    if (conf && conf.tree && conf.svg) {\r\n        conf.svg.appendChild(svgTree);\r\n        depth = conf.tree.depth();\r\n        width = depth == 1 ? 1 : Math.pow(2, depth - 1);\r\n        width = width * conf.WIDTH;\r\n        height = visualizeNode(conf.tree.root, svgTree, 0, width, 0, conf);\r\n        svgCaption.innerHTML = conf.caption || \"[caption]\";\r\n        svgTree.appendChild(svgCaption);\r\n        var box = svgCaption.getBBox();\r\n        Utils_1.attr(svgCaption, {\r\n            x: Math.max(0, (width / 2 - box.width / 2) | 0),\r\n            y: height\r\n        });\r\n        box = svgTree.getBBox();\r\n        width = box.width;\r\n        height = box.height;\r\n    }\r\n    return {\r\n        svg: svgTree,\r\n        width: width,\r\n        height: height\r\n    };\r\n}\r\nexports.BTreeVisualizer = BTreeVisualizer;\r\nfunction visualizeNode(node, svg, minx, maxx, y, conf) {\r\n    if (node == undefined)\r\n        return 0;\r\n    var halfWidth = conf.WIDTH / 2 | 0, centerX = minx + (maxx - minx) / 2 | 0, centerY = y + halfWidth, circleRadius = conf.WIDTH / 2 | 0, cl = conf.nodeClass ? conf.nodeClass(node) : \"\", nextYStart = y + conf.HEIGHT, svgNodeX = centerX - circleRadius, svgNodeY = centerY - circleRadius, svgNode = Utils_1.tag(\"g\", \"\", {\r\n        class: \"svg-node \" + cl,\r\n        transform: \"translate(\" + svgNodeX + \" \" + svgNodeY + \")\"\r\n    }), svgCircle = Utils_1.tag(\"circle\", \"\", {\r\n        cx: circleRadius,\r\n        cy: circleRadius,\r\n        r: circleRadius\r\n    }), svgText = Utils_1.tag(\"text\", \"\", {\r\n        \"font-size\": conf.FONT_SIZE,\r\n        class: \"no-select\"\r\n    });\r\n    svgText.innerHTML = conf.nodeValue(node.value);\r\n    svgNode.appendChild(svgCircle);\r\n    svgNode.appendChild(svgText);\r\n    svg.appendChild(svgNode);\r\n    if (!node.isLeaf) {\r\n        var childrenY = nextYStart + halfWidth, childrenX = 0;\r\n        if (node.left) {\r\n            childrenX = minx + (centerX - minx) / 2 | 0;\r\n            svg.appendChild(Utils_1.tag(\"line\", \"\", lineAttrs(centerX, centerY, childrenX, childrenY, circleRadius)));\r\n        }\r\n        if (node.right) {\r\n            childrenX = centerX + (maxx - centerX) / 2 | 0;\r\n            svg.appendChild(Utils_1.tag(\"line\", \"\", lineAttrs(centerX, centerY, childrenX, childrenY, circleRadius)));\r\n        }\r\n    }\r\n    var box = svgText.getBBox();\r\n    Utils_1.attr(svgText, {\r\n        x: circleRadius - box.width / 2 | 0,\r\n        y: circleRadius + box.height / 4 | 0\r\n    });\r\n    return Math.max(nextYStart, visualizeNode(node.left, svg, minx, centerX, nextYStart, conf), visualizeNode(node.right, svg, centerX, maxx, nextYStart, conf));\r\n}\r\nfunction lineAttrs(x1, y1, x2, y2, r) {\r\n    var angle = Math.atan2(y1 - y2, x1 - x2);\r\n    x1 = (x1 - r * Math.cos(angle)) | 0;\r\n    y1 = (y1 - r * Math.sin(angle)) | 0;\r\n    x2 = (x2 + r * Math.cos(angle)) | 0;\r\n    y2 = (y2 + r * Math.sin(angle)) | 0;\r\n    return {\r\n        x1: x1,\r\n        y1: y1,\r\n        x2: x2,\r\n        y2: y2,\r\n        class: \"svg-line\"\r\n    };\r\n}\r\n\n\n//# sourceURL=webpack:///./src/test/tree-utils.ts?");

/***/ }),

/***/ 0:
/*!******************************************************!*\
  !*** multi ./src/test/rbt.ts ./src/test/css/rbt.css ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ./src/test/rbt.ts */\"./src/test/rbt.ts\");\nmodule.exports = __webpack_require__(/*! ./src/test/css/rbt.css */\"./src/test/css/rbt.css\");\n\n\n//# sourceURL=webpack:///multi_./src/test/rbt.ts_./src/test/css/rbt.css?");

/***/ })

/******/ });